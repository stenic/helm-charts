apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "prometheus-pve-exporter.fullname" . }}
  labels:
    app: {{ template "prometheus-pve-exporter.name" . }}
    chart: {{ template "prometheus-pve-exporter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "prometheus-pve-exporter.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        app: {{ template "prometheus-pve-exporter.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "prometheus-pve-exporter.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9221
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: pve-config
            mountPath: "/etc/pve.yml"
            readOnly: true
            subPath: pve.yml
      volumes:
      - name: pve-config
        secret:
          secretName: {{ template "prometheus-pve-exporter.fullname" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
